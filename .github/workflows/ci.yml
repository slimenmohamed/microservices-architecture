name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Warm cache (user-service)
        uses: docker/build-push-action@v5
        with:
          context: ./user-service
          push: false
          tags: tmp/user-service:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Warm cache (notification-service)
        uses: docker/build-push-action@v5
        with:
          context: ./notification-service
          push: false
          tags: tmp/notification-service:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Make up (build and start stack)
        run: make up

      - name: Wait for services to start
        run: |
          set -e
          echo "Giving services time to initialize..."
          sleep 60
          
          echo "Checking container status..."
          docker compose -f infra/docker-compose.yml ps
          
          echo "Testing basic connectivity..."
          # Simple connectivity test without complex health checks
          for i in {1..20}; do
            echo "Connectivity test attempt $i/20..."
            
            # Test if we can reach the gateway at all
            if curl -s --max-time 5 http://localhost:8082 >/dev/null 2>&1; then
              echo "✅ Gateway is responding to requests"
              break
            elif [ $i -eq 20 ]; then
              echo "❌ Gateway not responding after 20 attempts"
              echo "Container status:"
              docker compose -f infra/docker-compose.yml ps
              echo "Gateway logs:"
              docker compose -f infra/docker-compose.yml logs gateway
              exit 1
            else
              echo "Gateway not ready, waiting..."
              sleep 5
            fi
          done

      - name: Migrate user-service
        run: make migrate

      - name: Install script dependencies (jq)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Smoke test
        run: make smoke

      - name: E2E test
        run: make e2e

      - name: Export OpenAPI specs
        run: bash scripts/export-openapi.sh

      - name: Upload OpenAPI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openapi-specs
          path: docs/*.openapi.json

      - name: Show container statuses
        run: make ps || true

      - name: Gather logs on failure
        if: failure()
        run: make logs || true

      - name: Tear down
        if: always()
        run: make down
