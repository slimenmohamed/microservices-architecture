# Rate limiting zone (10 req/s per IP, burst 20)
limit_req_zone $binary_remote_addr zone=api_rl:10m rate=10r/s;

server {
    listen 80;

    # Dynamically resolve Docker service names to avoid stale upstream IPs
    # Docker embedded DNS runs at 127.0.0.11 inside containers
    resolver 127.0.0.11 valid=30s ipv6=off;
    resolver_timeout 5s;

    # Log to Docker stdout/stderr for visibility
    access_log /dev/stdout;
    error_log  /dev/stderr info;

    # Hardening & limits
    client_max_body_size 1m;
    client_body_timeout 10s;
    send_timeout 10s;

    # Default proxy settings
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
    proxy_buffering on;
    proxy_buffers 8 16k;
    proxy_busy_buffers_size 24k;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Prefix "";

    # Upstream bases as variables (forces per-request DNS resolution)
    set $user_base  http://user-service:8000;
    set $notif_base http://notification-service:3000;

    # Health
    location /health { return 200 '{"status":"ok"}'; add_header Content-Type application/json; }

    # User service
    # v1 (versioned)
    location /api/v1/users/ {
        rewrite ^/api/v1/users/(.*)$ /users/$1 break;
        proxy_pass $user_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }
    location = /api/v1/users {
        rewrite ^ /users break;
        proxy_pass $user_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }
    location /api/users/ {
        rewrite ^/api/users/(.*)$ /users/$1 break;
        proxy_pass $user_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }
    location = /api/users {
        rewrite ^ /users break;
        proxy_pass $user_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }

    # Notification service
    # v1 (versioned)
    location /api/v1/notifications/ {
        rewrite ^/api/v1/notifications/(.*)$ /notifications/$1 break;
        proxy_pass $notif_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }
    location = /api/v1/notifications {
        rewrite ^ /notifications break;
        proxy_pass $notif_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }
    location /api/notifications/ {
        rewrite ^/api/notifications/(.*)$ /notifications/$1 break;
        proxy_pass $notif_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }
    location = /api/notifications {
        rewrite ^ /notifications break;
        proxy_pass $notif_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Correlation-Id $http_x_correlation_id;
        limit_req zone=api_rl burst=20 nodelay;
    }

    # Docs pass-through
    location /users/docs/ {
        rewrite ^/users/docs/(.*)$ /docs/$1 break;
        proxy_pass $user_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /users/docs.json {
        rewrite ^ /docs.json break;
        proxy_pass $user_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /notifications/docs/ {
        rewrite ^/notifications/docs/(.*)$ /docs/$1 break;
        proxy_pass $notif_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /notifications/docs.json {
        rewrite ^ /docs.json break;
        proxy_pass $notif_base;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
